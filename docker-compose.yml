version: '3.8'

services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  backend:
    build:
      context: /home/${USER}/projects/${PROJECT_NAME}
    restart: always
    command: gunicorn social_media_backend.wsgi:application --bind 0.0.0.0:8000 --workers 2 --timeout 120
    depends_on:
      - db
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${STACK_NAME}-backend.loadbalancer.server.port=8000
      - traefik.http.routers.${STACK_NAME}-backend-https.rule=Host(`api.${STACK_NAME}.${DOMAIN}`)
      - traefik.http.routers.${STACK_NAME}-backend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME}-backend-https.tls=true
      - traefik.http.routers.${STACK_NAME}-backend-https.tls.certresolver=le
      - traefik.http.routers.${STACK_NAME}-backend-http.rule=Host(`api.${STACK_NAME}.${DOMAIN}`)
      - traefik.http.routers.${STACK_NAME}-backend-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME}-backend-http.middlewares=https-redirect
    networks:
      - traefik-public

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  traefik-public:
    external: true
